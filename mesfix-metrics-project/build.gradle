plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.sonarqube" version "3.5.0.2730"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.h2database:h2:1.4.200'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

jacocoTestReport {
    dependsOn test // asegura que los tests se ejecuten antes del reporte

    reports {
        xml.required = true
        html.required = true
    }

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: [
                            '**/config/**',
                            '**/domain/**',
                            '**/repository/**'
                    ])
                })
        )
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "mesfix"
        property "sonar.host.url",   "http://localhost:9000"
        property "sonar.login",      "squ_81817e3ac457b69acd184c5cfe1dea47fa8fd889"
    }
}


tasks.named('test') {
    useJUnitPlatform()
}
